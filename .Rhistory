add2 <- function(x,y) {
x+y
}
add2(3,5)
above10 <- function(x) {
use <-x>10
x[use]
}
above <- function(x,n) {
use <-x>n
}
x<-1:20
above(x,12)
above(x)
above(x,12)
print above(x,12)
above10 <- function(x) {
use <-x>10
x[use]
}
above <- function(x,n=10) {
use <-x>n
}
}
cube <- function(x,n){
cube(3)
cube(3)
cube <- function(x,n){
x^3
}
cube(3)
cube <- function(x,n){
x^3
}
cube(3)
cube(3)
print cube(3)
print(cube(3))
cube <- function(x,n){
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y){
y + z
}
z<-4
x + g(x)
}
z<-10
f(3)
10
x<-5
y<-if(x<3){
NA
} else {
10
}
y
h <- function(x,y=NULL, d = 3L) {
z<-cbind(x,d)
if(!is.null(y))
z<-z+y
else
z<-z+f
g<-x+y/z
if(d == 3L)
return(g)
g<-g+10
g
}
d
print(d)
getwd()
directory <- read.csv(source(C:\Users\Adriel\Desktop\Coursera_Github\R Programming\Week 2 Programming\specdata, local=TRUE), header = TRUE, sep =",")
library(data.table)
files <- list.files(path = "C:\Users\Adriel\Desktop\Coursera_Github\R Programming\Week 2 Programming\specdata", pattern = ".csv")
temp <- lapply(files, fread, sep",")
data <- rbindlist(temp)
$sulfate
read.csv (C:\Users\Adriel\Desktop\Coursera_Github\R Programming\Week 2 Programming\specdata, header = TRUE, sep = ",")
library(data.table)
files <- list.files(path = "C:\Users\Adriel\Desktop\Coursera_Github\R Programming\Week 2 Programming\specdata",pattern = ".csv")
temp <- lapply(files, fread, sep=",")
data <- rbind( temp )
data <- rbind( temp )
files <- list.files(path = "C:\Users\Adriel\Desktop\Coursera_Github\R Programming\Week 2 Programming\specdata",pattern = ".csv")
directory <- list.dirs(path = "C:\Users\Adriel\Desktop\Coursera_Github\R Programming\Week 2 Programming\specdata", full.names = TRUE, recursive = TRUE)
directory <- list.dirs(path = "C:\\Users\Adriel\Desktop\Coursera_Github\R Programming\Week 2 Programming\specdata", full.names = TRUE, recursive = TRUE)
directory <- list.dirs(path = "C:\\Users\\Adriel\Desktop\Coursera_Github\R Programming\Week 2 Programming\specdata", full.names = TRUE, recursive = TRUE)
directory <- list.dirs(path = "C:\\Users\\Adriel\\Desktop\\Coursera_Github\\R Programming\\Week 2 Programming\\specdata", full.names = TRUE, recursive = TRUE)
datafiles <- list.files(path = "C:\\Users\\Adriel\\Desktop\\Coursera_Github\\R Programming\\Week 2 Programming\\specdata", full.names = FALSE)
## add extra backslash to file path to avoid error
ls(datafiles)
directory <- "C:\\Users\\Adriel\\Desktop\\Coursera_Github\\R Programming\\Week 2 Programming\\specdata", full.names = FALSE)
## add extra backslash to file path to avoid error
pollutant <- c(sulfate, nitrate)
pollutantmean <- function(directory, pollutant, id = 1:32)
directory <- "C:\\Users\\Adriel\\Desktop\\Coursera_Github\\R Programming\\Week 2 Programming\\specdata"
## add extra backslash to file path to avoid error
pollutant <- c(sulfate, nitrate)
pollutantmean <- function(directory, pollutant, id = 1:32)
directory <- "C:\\Users\\Adriel\\Desktop\\Coursera_Github\\R Programming\\Week 2 Programming\\specdata"
## add extra backslash to file path to avoid error
source (directory)
pollutant <- c(sulfate, nitrate)
pollutantmean <- function(directory, pollutant, id = 1:32)
?source
View(pollutantmean)
View(pollutantmean)
directory <- read.csv("C:\\Users\\Adriel\\Desktop\\Coursera_Github\\R Programming\\Week 2 Programming\\specdata", header = TRUE)
## add extra backslash to file path to avoid error
library(datasets)
data("iris")
>iris
?iris
table(iris)
head(iris, n=10)
mean(subset(iris, Species == virginica)$Sepal.Length)
mean(subset(iris, Species == "virginica")$Sepal.Length)
colMeans(iris)
apply(iris[,1:4], 1, mean)
apply(iris,1,mean)
apply(iris[,1:4], 2, mean)
?apply
library(datasets)
data(mtcars)
mean(mtcars$mpg, mtcars$cyl)
head(mtcars, n=10)
head(mtcars, n=10)
lapply(mtcars, mean)
apply(mtcars,2, mean)
sapply(split(mtcars$mpg, mtcars$cyl),mean)
sapply(mtcars, cyl,mean)
with(mtcars, tapply(mpg,cyl, mean))
tapply(mtcars&cyl, mtcars$mpg,mean)
tapply(mtcars&mpg, mtcars$cyl,mean)
split(mtcars, mtcars$cyl)
sapply(split(mtcars$hp, mtcars$cyl),mean)
debug(ls)
ls()
getwd()
setwd("C:/Users/Adriel/Desktop/Coursera_Github/R Programming/Week 3 Programming")
help(inv)
?inverse
library(MASS)
?set
?get
makeCacheMatrix <- function(x = matrix()){
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setinv <- function(inverse) inv <<- inverse
getinv <- function() inv
list(set = set, get = get, setinv = setinv, getinv = getinv)
}
cacheSolve <- function, (x, ...) {
inv <- x$getinv()
if(!is.null(inv)) {
message("getting cached data")
return(inv)
}
data <- x$get()
inv <- inverse(data, ...)
x$setinv(inv)
inv
}
makeCacheMatrix <- function(x = matrix()){
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setinv <- function(inverse) inv <<- inverse
getinv <- function() inv
list(set = set, get = get, setinv = setinv, getinv = getinv)
}
cacheSolve <- function (x, ...) {
inv <- x$getinv()
if(!is.null(inv)) {
message("getting cached data")
return(inv)
}
data <- x$get()
inv <- inverse(data, ...)
x$setinv(inv)
inv
}
my_matrix <- makeCacheMatrix(matrix(1:4, 2,2))
my_matrix$get()
my_matrix$getinv()
cacheSolve(my_matrix)
?solve
makeCacheMatrix <- function(x = matrix()){
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setinv <- function(inverse) inv <<- inverse
getinv <- function() inv
list(set = set, get = get, setinv = setinv, getinv = getinv)
}
cacheSolve <- function (x, ...) {
inv <- x$getinv()
if(!is.null(inv)) {
message("getting cached data")
return(inv)
}
data <- x$get()
inv <- solve(data, ...)
x$setinv(inv)
inv
}
my_matrix$get()
my_matrix$getinv
my_matrix$getinv()
cacheSolve(my_matrix)
my_matrix$getinv()
cacheSolve(my_matrix)
my_matrix$get()
my_matrix$set(matrix(c(2,2,1,4),2,2))
my_matrix$get()
my_matrix$getinv()
cacheSolve(my_matrix)
cacheSolve(my_matrix)
my_matrix$getinv()
